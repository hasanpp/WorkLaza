services:
  db:
    image: postgres:16
    # container_name: worklaza_db
    # restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
     - .env

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"

  web:
    build: .
    container_name: django-docker
    ports:
     - "8000:8000"
    depends_on:
     - db
     - redis
    command: >
      sh -c "
        python manage.py makemigrations &&  
        python manage.py migrate --fake-initial &&
        python manage.py collectstatic --noinput &&
        daphne -b 0.0.0.0 -p 8000 backend.asgi:application
      "
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    

    environment:
      DJANGO_SECRET_KEY: ${SECRET_KEY}
      DEBUG: ${DEBUG}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DATABASE_ENGINE: ${DATABASE_ENGINE}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
    env_file:
     - .env

  celery-worker:
    build: .
    command: celery -A backend worker --loglevel=info
    depends_on:
      - web
      - redis
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
    env_file:
      - .env

volumes:
  postgres_data:
  static_volume: